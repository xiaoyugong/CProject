/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: packet.proto */

#ifndef PROTOBUF_C_packet_2eproto__INCLUDED
#define PROTOBUF_C_packet_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Mydpi__Packet Mydpi__Packet;


/* --- enums --- */


/* --- messages --- */

struct  _Mydpi__Packet
{
  ProtobufCMessage base;
  /*
   *传输层协议
   */
  char *ipporto2name;
  /*
   *源IP
   */
  char *srcip;
  /*
   *源端口
   */
  protobuf_c_boolean has_srcport;
  uint32_t srcport;
  /*
   *目的IP
   */
  char *dstip;
  /*
   *目的端口
   */
  protobuf_c_boolean has_dstport;
  uint32_t dstport;
  /*
   *应用层协议
   */
  char *proto;
  /*
   *源数据包个数
   */
  protobuf_c_boolean has_srcpktnums;
  uint32_t srcpktnums;
  /*
   *源数据流量大小
   */
  protobuf_c_boolean has_srcbytes;
  uint64_t srcbytes;
  /*
   *目的数据包个数
   */
  protobuf_c_boolean has_dstpktnums;
  uint32_t dstpktnums;
  /*
   *目的数据量大小
   */
  protobuf_c_boolean has_dstbytes;
  uint64_t dstbytes;
  /*
   */
  protobuf_c_boolean has_vlan;
  uint32_t vlan;
  /*
   *主机名/IP
   */
  char *host;
  /*
   *SSH/SSL客户端
   */
  char *client;
  /*
   *SSH/SSL服务端
   */
  char *server;
  /*
   *比特流hash值
   */
  char *bthash;
  /*
   *其他信息
   */
  char *info;
  /*
   *时间戳
   */
  protobuf_c_boolean has_timestamp;
  uint64_t timestamp;
  /*
   *httpURL
   */
  char *httpurl;
  /*
   *httpMethod
   */
  char *httpmethod;
  /*
   *源mac地址
   */
  char *srcmac;
  /*
   *目的mac地址
   */
  char *dstmac;
};
#define MYDPI__PACKET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&mydpi__packet__descriptor) \
    , NULL, NULL, 0, 0, NULL, 0, 0, NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, NULL, NULL, NULL, NULL, NULL, 0, 0, NULL, NULL, NULL, NULL }


/* Mydpi__Packet methods */
void   mydpi__packet__init
                     (Mydpi__Packet         *message);
size_t mydpi__packet__get_packed_size
                     (const Mydpi__Packet   *message);
size_t mydpi__packet__pack
                     (const Mydpi__Packet   *message,
                      uint8_t             *out);
size_t mydpi__packet__pack_to_buffer
                     (const Mydpi__Packet   *message,
                      ProtobufCBuffer     *buffer);
Mydpi__Packet *
       mydpi__packet__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   mydpi__packet__free_unpacked
                     (Mydpi__Packet *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Mydpi__Packet_Closure)
                 (const Mydpi__Packet *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor mydpi__packet__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_packet_2eproto__INCLUDED */
